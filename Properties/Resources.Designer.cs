//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace assemblyCompressor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("assemblyCompressor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap about {
            get {
                object obj = ResourceManager.GetObject("about", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon ac {
            get {
                object obj = ResourceManager.GetObject("ac", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap add_assembly {
            get {
                object obj = ResourceManager.GetObject("add_assembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap anyCpu {
            get {
                object obj = ResourceManager.GetObject("anyCpu", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap app {
            get {
                object obj = ResourceManager.GetObject("app", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Globalization;
        ///using System.IO;
        ///using System.IO.Compression;
        ///using System.Reflection;
        ///using System.Resources;
        ///using System.Text;
        ///using System.Threading;
        ///using System.Windows.Forms;
        ///using System.Xml;
        ///
        ///namespace assemblyCompressor.Core.subSystem {
        ///	internal class appLauncher {
        ///		[STAThread]
        ///		private static void Main(string[] args) {
        ///			Application.EnableVisualStyles();
        ///			Application.SetCompatibleTextRenderingDefault(false);
        ///
        ///			 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string appLuncher {
            get {
                return ResourceManager.GetString("appLuncher", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap assembly {
            get {
                object obj = ResourceManager.GetObject("assembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap build {
            get {
                object obj = ResourceManager.GetObject("build", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap buildAssembly {
            get {
                object obj = ResourceManager.GetObject("buildAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap checkForUpdates {
            get {
                object obj = ResourceManager.GetObject("checkForUpdates", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cmd {
            get {
                object obj = ResourceManager.GetObject("cmd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap creativecommons {
            get {
                object obj = ResourceManager.GetObject("creativecommons", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using System.Drawing;
        ///using System.Threading;
        ///using System.Windows.Forms;
        ///
        ///namespace assemblyCompressor.Core.subSystem {
        ///	internal class dateExpiredDialog : Form {
        ///		private Button btnClose;
        ///		private PictureBox imgError;
        ///		private Label label1;
        ///		private Label label2;
        ///		private Panel pnlContent;
        ///
        ///		public dateExpiredDialog(DateTime expirationDate) {
        ///			InitializeComponent();
        ///
        ///			if (!Thread.CurrentThread.CurrentCulture.Name.Contains(&quot;de&quot;)) {
        ///				 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dateExpiredDialog {
            get {
                return ResourceManager.GetString("dateExpiredDialog", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap dependency {
            get {
                object obj = ResourceManager.GetObject("dependency", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using System.Drawing;
        ///using System.Reflection;
        ///using System.Windows.Forms;
        ///
        ///namespace assemblyCompressor.Core.subSystem {
        ///	internal sealed class exceptionDialog : Form {
        ///		private readonly string _appName = string.Empty;
        ///		private Button btnClose;
        ///		private PictureBox imgApplication;
        ///		private Label label1;
        ///		private Label lblInfo;
        ///		private Label lblTitle;
        ///		private Panel pnlInfo;
        ///		private Panel pnlTop;
        ///		private ProgressBar prgSend;
        ///		private Te [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string exceptionDialog {
            get {
                return ResourceManager.GetString("exceptionDialog", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap exclamation {
            get {
                object obj = ResourceManager.GetObject("exclamation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap folder_16px {
            get {
                object obj = ResourceManager.GetObject("folder_16px", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap info {
            get {
                object obj = ResourceManager.GetObject("info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Threading;
        ///
        ///namespace assemblyCompressor.Core.subSystem {
        ///	internal static class languageHelper {
        ///		private static Dictionary&lt;string, string&gt; _stringsDe;
        ///		private static Dictionary&lt;string, string&gt; _stringsEn;
        ///
        ///		private static void initializeDictionaries() {
        ///			_stringsDe = new Dictionary&lt;string, string&gt;();
        ///			_stringsEn = new Dictionary&lt;string, string&gt;();
        ///
        ///			_stringsDe.Add(&quot;global_application&quot;, &quot;Die Anwendung&quot;);
        ///			_stringsEn.Add(&quot;global_applica [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string languageHelper {
            get {
                return ResourceManager.GetString("languageHelper", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap open {
            get {
                object obj = ResourceManager.GetObject("open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Open_Large {
            get {
                object obj = ResourceManager.GetObject("Open_Large", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pbkt {
            get {
                object obj = ResourceManager.GetObject("pbkt", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap remove_assembly {
            get {
                object obj = ResourceManager.GetObject("remove_assembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Save_Large {
            get {
                object obj = ResourceManager.GetObject("Save_Large", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SaveAs_Large {
            get {
                object obj = ResourceManager.GetObject("SaveAs_Large", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap searchReferences {
            get {
                object obj = ResourceManager.GetObject("searchReferences", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap updates {
            get {
                object obj = ResourceManager.GetObject("updates", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap usys {
            get {
                object obj = ResourceManager.GetObject("usys", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap version {
            get {
                object obj = ResourceManager.GetObject("version", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap x64 {
            get {
                object obj = ResourceManager.GetObject("x64", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap x86 {
            get {
                object obj = ResourceManager.GetObject("x86", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
